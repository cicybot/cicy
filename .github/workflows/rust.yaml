name: CiCi CD

on:
  push:
    branches:
      - dev

jobs:
  rust-build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64-linux-android, x86_64-linux-android]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust targets
        run: rustup target add ${{ matrix.target }}

      - name: Install Android NDK
        if: contains(matrix.target, 'android')
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          wget https://dl.google.com/android/repository/android-ndk-r26d-linux.zip
          unzip android-ndk-r26d-linux.zip
          echo "ANDROID_NDK_HOME=${GITHUB_WORKSPACE}/android-ndk-r26d" >> $GITHUB_ENV

      - name: Build
        run: |
          if [[ "${{ matrix.target }}" == *"android"* ]]; then
            export NDK_HOME=${ANDROID_NDK_HOME}
            export PATH=$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          fi
          cargo build --release --target=${{ matrix.target }}

  rust-build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust targets
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target=${{ matrix.target }}

  rust-build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin]
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust targets
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target=${{ matrix.target }}
