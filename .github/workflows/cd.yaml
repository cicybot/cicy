name: CiCi CD
on:
    push:
        branches:
          - dev
        # tags:
        #     - v*
env:
    node-version: 20.11.1

permissions:
    contents: write

jobs:
    desktop-build:
        name: desktop-build
        # needs: release
        strategy:
            matrix:
                include:
                    - os: windows-latest
                      command: make:x64
                      tag: x64
                      dist: /apps/desktop/out/make/squirrel.windows/x64/*Setup.exe
        runs-on: ${{ matrix.os }}
        timeout-minutes: 30
        env:
            VERSION: 1.0.53
            PROJECT_NAME: CiCi
            GITHUB_REPOSITORY: ${{ github.repository }}
            MAKE_OUT_DIR: ${{ github.workspace }}/apps/desktop/out/make
            GH_TOKEN: ${{ github.token }}
        steps:
            - name: Checkout to git repository
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.node-version }}
            - name: Enable Corepack
              run: |
                  corepack enable
            - name: Run install
              uses: borales/actions-yarn@v5
              with:
                  cmd: install
            - name: Build Pkg
              run: |
                  cd ${{ github.workspace }}
                  yarn build:pkg
                  echo "export {App} from '@cc/app';" > apps/desktop/src/app/App.tsx
            - name: Run build distributive
              uses: borales/actions-yarn@v5
              with:
                  cmd: ${{ matrix.command }}
                  dir: 'apps/desktop'
            # - name: Release Upload assets on Win32
            #   if: runner.os == 'Windows'
            #   env:
            #       tag: ${{ github.ref_name }}
            #   run: |
            #       #gh release upload ${{ github.ref_name }} "${{env.MAKE_OUT_DIR}}/zip/win32/x64/${{env.PROJECT_NAME}}-win32-x64-${{env.VERSION}}.zip"
            #       mv "${{env.MAKE_OUT_DIR}}/squirrel.windows/x64/${{env.PROJECT_NAME}}-${{env.VERSION}} Setup.exe" "${{env.MAKE_OUT_DIR}}/squirrel.windows/x64/${{env.PROJECT_NAME}}-win32-x64-${{env.VERSION}} Setup.exe"
            #       gh release upload ${{ github.ref_name }} "${{env.MAKE_OUT_DIR}}/squirrel.windows/x64/${{env.PROJECT_NAME}}-win32-x64-${{env.VERSION}} Setup.exe"
    
    # release:
    #     name: Release pushed tag
    #     runs-on: ubuntu-22.04
    #     steps:
    #         - name: Create release
    #           env:
    #               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #               tag: ${{ github.ref_name }}
    #           run: |
    #               if gh release view "$tag" --repo="$GITHUB_REPOSITORY" &> /dev/null; then
    #                 echo "Release $tag already exists."
    #               else
    #                 gh release create "$tag" \
    #                     --repo="$GITHUB_REPOSITORY" \
    #                     --title="${tag}" \
    #                     --draft \
    #                     --generate-notes
    #                 echo "Release $tag created."
    #               fi
